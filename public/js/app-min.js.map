{"version":3,"sources":["../src/js/app.js"],"names":["scaleColorLink","d3","scaleOrdinal","range","fontScale","scaleLinear","subtractLight","color","amount","cc","parseInt","c","toString","length","darken","indexOf","substring","$","height","width","nodesOri","linksOri","nodesGlo","linksGlo","sankeyChartD3","path","svg","createGrafico","data","container","margin","top","right","bottom","left","size","years","newData","forEach","v","k","push","date","Date","value","svgGrafico","html","append","attr","x","scaleTime","domain","extent","d","rangeRound","y","line","call","axisBottom","style","axisLeft","datum","updatePlaca","element","contenedor","select","text","name","prod","imp","exp","fadeIn","opacity","g","i","id_nodes","links","linksFilter","nodes","nodesFilter","id","sourceLinks","link","target","targetLinks","source","selectAll","filter","transition","statusNode","category","dx","fadeOut","dy","nodeWidth","createBackButton","node","console","log","button","on","event","group","remove","preSankey","dibujarSankey","heigth","dragmove","this","Math","max","min","relayout","empty","sankey","layout","enter","sort","a","b","drag","e","floor","actualizarSankey","oldLinks","linksDiff","links_old","links_new","maxParent","nodo","parentNode","parent","deleteEmptyNodes","del","nodesDelete","status","nodeI","linkI","reverse","splice","declareGroupLinks","desarrollo","arguments","undefined","parentSource","stateSource","parentTarget","stateTarget","nodoExistente","addSource","addTarget","addValue","extend","init","downloadFile","formatoSankey","elemento","processData","pos","position","importation","split","map","exportation","production","Promise","success","csv","nodos","then"],"mappings":"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","file":"app-min.js","sourcesContent":["//  Variables Globales\nlet scaleColorLink  = d3.scaleOrdinal().range(['#80A1C1','#BA3F1D','#333333','#643173','#BA3F1D']);\nlet fontScale       = d3.scaleLinear().range([8, 16]);\n\n//  Funciones\n// const formatoNumero = (d) => {\n//   let format = d3.format(',.0f');\n//\n//   return `${ format(d) } Twh`;\n// };\n\n/* Resta el porcentaje indicado a un color (RR, GG o BB) hexadecimal para oscurecerlo */\nconst subtractLight = function(color, amount){\n  let cc = parseInt(color,16) - amount;\n  let c = (cc < 0) ? 0 : (cc);\n  c = (c.toString(16).length > 1 ) ? c.toString(16) : `0${c.toString(16)}`;\n\n  return c;\n};\n\n/* Oscurece un color hexadecimal de 6 caracteres #RRGGBB segun el porcentaje indicado */\nconst darken = (color, amount) =>{\n  color = (color.indexOf('#')>=0) ? color.substring(1,color.length) : color;\n  amount = parseInt((255*amount)/100);\n  color = `#${subtractLight(color.substring(0,2), amount)}${subtractLight(color.substring(2,4), amount)}${subtractLight(color.substring(4,6), amount)}`;\n\n  return color;\n};\n\n$(() => {\n\n  let height      = $('#content').height(),\n      width       = $('#content').width() - $('#placa').width(),\n      // clavesNodos = [],\n      // dataSankey  = {},\n      // moveId = 0,\n      nodesOri, linksOri,\n      nodesGlo, linksGlo,\n      sankeyChartD3, path, svg;\n\n  //  Funciones\n      // const generarPuertas    = () => {\n      //   dataSankey.nodes.filter((element) => (element.parent === false)).forEach((v, k) => {\n      //     clavesNodos.push({ 'id': v.id, 'state': true });\n      //   });\n      // };\n      const createGrafico = (data, container) => {\n        // Variables\n        let margin = { top: 0, right: 0, bottom: 0, left: 0 };\n        let size = { width: (300 - margin.left - margin.right), height: (50 - margin.top - margin.bottom) };\n        let years = ['2012', '2013', '2014', '2015', '2016', '2017'];\n        let newData = [];\n\n        data.forEach((v, k) => { newData.push({ date: new Date(years[k]), value: v }); });\n\n        let svgGrafico = container.html('').append('svg')\n          .attr('width', size.width + margin.left + margin.right)\n          .attr('height', size.height + margin.top + margin.bottom)\n          .append('g')\n            .attr('transform', `translate(${ margin.left }, ${ margin.top })`);\n\n        // let parseTime = d3.timeParse('%d-%b-%y');\n\n        let x = d3.scaleTime()\n          .domain(d3.extent(newData, (d) => d.date))\n          .rangeRound([0, size.width]);\n        let y = d3.scaleLinear()\n          .domain(d3.extent(newData, (d) => d.value))\n          .rangeRound([size.height, 0]);\n\n\n        let line = d3.line().x((d) => x(d.date)).y((d) => y(d.value));\n\n        svgGrafico.append('g')\n          .call(d3.axisBottom(x))\n          .style('transform', `translate(0px, ${ size.height - 1 }px)`);\n\n        svgGrafico.append('g')\n          .call(d3.axisLeft(y));\n        // .append('text')\n        //   .attr('fill', '#000')\n        //   .attr('transform', 'rotate(-90)')\n        //   .attr('y', 6)\n        //   .attr('dy', '0.71em')\n        //   .attr('text-anchor', 'end')\n        //   .text('Price ($)');\n\n        svgGrafico.append('path')\n          .datum(newData)\n          .attr('fill', 'none')\n          .attr('stroke', 'steelblue')\n          .attr('stroke-linejoin', 'round')\n          .attr('stroke-linecap', 'round')\n          .attr('stroke-width', 1.5)\n          .attr('d', line);\n      };\n      const updatePlaca = (element) => {\n        let contenedor = d3.select('#placa');\n            contenedor.select('.placa_titulo').style('text-transform', 'uppercase').text(element.name);\n            contenedor.select('.placa_prod').text(element.value);\n            contenedor.select('.placa_imp').text(element.value * 0.2);\n            contenedor.select('.placa_exp').text(element.value * 0.1);\n            contenedor.select('.placa_lost').text(element.value * 0.05);\n            contenedor.select('.placa_efi').text(((element.value -  (element.value * 0.05)) * 100) / element.value);\n            contenedor.select('.placa_more').text(element.value  * 0.01);\n\n        createGrafico(element.prod, contenedor.select('.placa_grafico.grafico_prod'));\n        createGrafico(element.imp, contenedor.select('.placa_grafico.grafico_imp'));\n        createGrafico(element.exp, contenedor.select('.placa_grafico.grafico_exp'));\n      };\n\n      const fadeIn = (opacity) => (g, i) => {\n        updatePlaca(g);\n\n        let id_nodes = [],\n            links,\n            linksFilter,\n            nodes,\n            nodesFilter;\n\n        // add event node\n        id_nodes.push(g.id);\n        // add sourceLinks\n        g.sourceLinks.forEach((link) => { id_nodes.push(link.target.id); });\n        // add targetLinks\n        g.targetLinks.forEach((link) => { id_nodes.push(link.source.id); });\n\n        // select links\n        links = d3.selectAll('#sankey .link');\n        //  links focusIn\n        // d3.selectAll('#sankey .link')\n        //   .filter((d) => (d.source.id === g.id || d.target.id === g.id))\n        //   .transition().style('stroke-opacity', .75);\n        // links focusOut\n        linksFilter = links.filter((d) => (d.source.id !== g.id && d.target.id !== g.id));\n        linksFilter.transition().style('stroke-opacity', opacity);\n\n        //  select nodes\n        nodes = d3.selectAll('#sankey .node');\n        // nodes focusIn\n        nodesFilter = nodes.filter((d) => {\n          let statusNode = false;\n\n          id_nodes.forEach((element) => { if (element === d.id) { statusNode = true; } });\n\n          return statusNode;\n        });\n        nodesFilter.select('rect').transition().style('fill', (d) => darken(scaleColorLink(d.category), 20));\n        nodesFilter.select('text').transition().attr('text-anchor', 'middle').attr('y', -10).attr('x', (d) => (d.dx / 2)).text((d) => (d.name));\n        // nodes focusOut\n        nodesFilter = nodes.filter((d) => {\n          let statusNode = true;\n\n          id_nodes.forEach((element) => { if (element === d.id) { statusNode = false; } });\n\n          return statusNode;\n        });\n        nodesFilter.transition().style('opacity', opacity);\n        };\n      const fadeOut = (opacity) => (g, i) => {\n\n        let id_nodes = [],\n            links,\n            linksFilter,\n            nodes,\n            nodesFilter;\n\n        // add event node\n        id_nodes.push(g.id);\n        // add sourceLinks\n        g.sourceLinks.forEach((link) => { id_nodes.push(link.target.id); });\n        // add targetLinks\n        g.targetLinks.forEach((link) => { id_nodes.push(link.source.id); });\n\n        // select links\n        links = d3.selectAll('#sankey .link');\n        //  links focusIn\n        // d3.selectAll('#sankey .link')\n        //   .filter((d) => (d.source.id === g.id || d.target.id === g.id))\n        //   .transition().style('stroke-opacity', .75);\n        // links focusOut\n        linksFilter = links.filter((d) => (d.source.id !== g.id && d.target.id !== g.id));\n        linksFilter.transition().style('stroke-opacity', 0.75);\n\n        //  select nodes\n        nodes = d3.selectAll('#sankey .node');\n        // nodes focusIn\n        nodesFilter = nodes.filter((d) => {\n          let statusNode = false;\n\n          id_nodes.forEach((element) => { if (element === d.id) { statusNode = true; } });\n\n          return statusNode;\n        });\n        nodesFilter.select('rect')\n          .transition()\n          .style('fill', (d) => scaleColorLink(d.category));\n        nodesFilter.select('text')\n          .transition()\n          .attr('text-anchor', 'end')\n          .attr('y', (d) => (d.dy / 2)).attr('x', -10)\n          .text((d) => (d.name.length > 8) ? (d.name.substring(0, 5) + '...') : (d.name))\n          .filter((d) => (d.x < width / 2))\n            .attr('x', 10 + sankeyChartD3.nodeWidth())\n            .attr('text-anchor', 'start');\n        // nodes focusOut\n        nodesFilter = nodes.filter((d) => {\n          let statusNode = true;\n\n          id_nodes.forEach((element) => { if (element === d.id) { statusNode = false; } });\n\n          return statusNode;\n        });\n        nodesFilter.transition().style('opacity', 1);\n      };\n      // const colapsarExpandirNodo = (nodo) => {\n      //\n      //   nodesOri[nodo.id].group = (nodesOri[nodo.id].group) ? (false) : (true);\n      //\n      //   return nodesOri;\n      //\n      //\n      //   // let oldLinks = dataSankey.links;\n      //\n      //   // if (nodo.parent === false) {\n      //   //   console.log('Se expande nodo');\n      //   //   clavesNodos.forEach((element) => { if (element.id === nodo.id + moveId) { element.state = false; } });\n      //   //\n      //   //   dataSankey.nodes = nodosOriginales;\n      //   //   dataSankey.links = linksOriginales;\n      //   //\n      //   //   dataSankey.links = declareGroupLinks(dataSankey.links, true);\n      //   //\n      //   //   dataSankey = buscarNodes(dataSankey.nodes, dataSankey.links);\n      //   //   moveId = 0;\n      //   //   $('#sankey').empty();\n      //   //   dibujarSankey(width, height, dataSankey);\n      //   //   // actualizarSankey($('#content').width(), $('#content').height(), dataSankey, oldLinks);\n      //   // } else {\n      //   //   console.log('Se colapsa nodo');\n      //   //   // let parent = dataSankey.nodes.filter((element) => (element.name === nodo.parent))[0];\n      //   //   // clavesNodos.filter((element) => (element.id === parent.id))[0].state = true;\n      //   //   //\n      //   //   // dataSankey = buscarNodes(nodosOriginales, dataSankey.links = declareGroupLinks(linksOriginales));\n      //   //   //\n      //   //   // $('#sankey').empty();\n      //   //   // dibujarSankey(width, height, dataSankey);\n      //   //   // actualizarSankey($('#content').width(), $('#content').height(), dataSankey, oldLinks);\n      //   // }\n      // };\n      const createBackButton = (node) => {\n        console.log(node);\n        let button = d3.select('#placa .agrup')\n          .append('div')\n            .attr('id', () => (`node_${ node.id }`))\n            .attr('class', 'backButton')\n            .on('click', (event) => {\n              if (nodesOri[node.id].group) {\n                nodesOri[node.id].group = false;\n              } else {\n                nodesOri[node.id].group = true;\n              }\n\n              $(`#node_${ node.id }`).remove();\n\n              preSankey();\n            });\n\n        button.append('span').attr('class', 'backButton_text').text(node.name);\n        button.append('span')\n          .append('i')\n          .attr('class', 'fa fa-times')\n          .attr('aria-hidden', 'true')\n          .style('margin-left', '10px');\n      };\n      const dibujarSankey = (width, heigth, data) => {\n\n        // Variables\n        let margin = { top: 50, right: 50, bottom: 50, left: 50 };\n        let size = { width: (width - margin.left - margin.right), height: (heigth - margin.top - margin.bottom) };\n\n        $('#sankey').empty();\n\n        // Creación SVG\n        svg = d3.select('#sankey')\n          .append('svg')\n            .attr('width', size.width + margin.left + margin.right)\n            .attr('height', size.height + margin.top + margin.bottom)\n          .append('g')\n            .attr('transform', `translate(${ margin.left }, ${ margin.top })`);\n\n        // Creación Sankey\n        sankeyChartD3 = d3.sankey()\n          .nodeWidth(20) // Ancho nodo\n          .size([size.width, size.height])\n          .nodes(data.nodes)\n          .links(data.links)\n          .layout();\n\n        // Creación de Links\n        path = sankeyChartD3.link();\n\n        fontScale.domain(d3.extent(data.nodes, (d) => d.value));\n\n        //  Se crean links\n        let link = svg.append('g')\n          .attr('id', 'links')\n          .selectAll('.link')\n          .data(data.links)\n          .enter()\n          .append('path')\n            .attr('class', 'link')\n            .attr('d', path)\n            .style('stroke-width', (d) => Math.max(1, d.dy))\n            .style('stroke', 'silver')\n            .style('stroke-opacity', 0.75)\n            .on('mouseover', (d) => { d3.select(d3.event.target).style('stroke-opacity', 1); })\n            .on('mouseout', (d) => { d3.select(d3.event.target).style('stroke-opacity', 0.75); })\n            .sort((a, b) => (b.dy - a.dy));\n\n        link.filter((element) => (element.target.name === 'EXPORTACIONES' || element.target.name === 'CONSUMO PROPIO' || element.target.name === 'TRANSPORTE' || element.target.name === 'PERDIDA'))\n          .style('stroke', '#BA3F1D');\n        link.filter((element) => (element.source.name === 'IMPORTACIONES'))\n          .style('stroke', 'green');\n\n        // Se crean nodos\n        let node = svg.append('g')\n          .attr('id', 'nodes')\n          .selectAll('.node')\n          .data(data.nodes.filter((element) => (element.sourceLinks.length !== 0 || element.targetLinks.length !== 0)))\n          .enter()\n          .append('g')\n            .attr('id', (d) => d.id)\n            .attr('class', 'node')\n            .attr('transform', (d) => `translate(${ d.x }, ${ d.y })`)\n            .call(d3.drag().on('drag', dragmove));\n        // Se crean rectangulos nodos\n        node.append('rect')\n            .attr('width', sankeyChartD3.nodeWidth())\n            .attr('height', (d) => Math.max(10, d.dy))\n            .style('fill', (d) => scaleColorLink(d.category))\n            .on('mouseover', fadeIn(0.025))\n            .on('mouseout', fadeOut())\n            .on('dblclick', (e) => {\n\n              if (nodesOri[e.id].group) {\n                nodesOri[e.id].group = false;\n              } else {\n                nodesOri[e.id].group = true;\n              }\n              createBackButton(e);\n              preSankey();\n            });\n\n        // Se crean textos nodos\n        node.append('text')\n            .attr('x', -10)\n            .attr('text-anchor', 'end')\n            .attr('y', (d) => (d.dy / 2))\n            .attr('dy', '.35em')\n            .style('fill', (d) => scaleColorLink(d.category))\n            // .style('font-size', '8px')\n            .style('font-size', (d) => `${ Math.floor(fontScale(d.value)) }px`)\n            // .text((d) => (d.name))\n            .text((d) => (d.name.length > 8) ? (d.name.substring(0, 5) + '...') : (d.name))\n            .filter((d) => (d.x < width / 2))\n              .attr('x', 10 + sankeyChartD3.nodeWidth())\n              .attr('text-anchor', 'start');\n        // Se agrega texto referencia hover link\n        link.append('title').text((d) => `${ d.source.name } (${ d.source.id }) → ${ d.target.name } (${ d.target.id }) → ${ d.value }`);\n        // Se agrega texto referencia hover node\n        node.append('title').text((d) => `${ d.name } (${ d.id })`);\n\n        // the function for moving the nodes\n        function dragmove(d) {\n          d3.select(this).attr('transform', `translate(${ d.x = Math.max(0, Math.min(size.width - d.dx, d3.event.x)) }, ${ d.y = Math.max(0, Math.min(size.height - d.dy, d3.event.y)) })`);\n          sankeyChartD3.relayout();\n          link.attr('d', path);\n        }\n      };\n\n      const actualizarSankey = (width, heigth, data, oldLinks) => {\n        const linksDiff = (links_old, links_new) => {\n          console.log(links_old);\n          console.log(links_new);\n          let links = [],\n              source,\n              target;\n\n          links_new.forEach((v, k) => {\n            source  = v.source;\n            target  = v.target;\n\n            links_old.forEach((v, k) => { if ((source !== v.source.id) || (target !== v.target.id)) { links.push(v); } });\n          });\n\n          return links;\n        };\n\n        // let newNodes = nodesDiff(data, sankeyData);\n        // let newLinks = linksDiff(oldLinks, data.links);\n\n        // Parametros\n        let margin = {\n          top: 0,\n          right: 0,\n          bottom: 0,\n          left: 0\n        };\n        let size = {\n          width: width - margin.left - margin.right,\n          height: heigth - margin.top - margin.bottom\n        };\n\n        // Creación Sankey\n        sankeyChartD3 = d3.sankey()\n          .nodeWidth(20) // Ancho nodo\n          .size([size.width, size.height])\n          .nodes(data.nodes)\n          .links(data.links)\n          .layout(32);\n\n        sankeyChartD3.relayout();\n\n        // Creación de Links\n        path = sankeyChartD3.link();\n        $('#links').empty();\n\n        let links = d3.select('#links')\n          .selectAll('.link')\n          .data(data.links)\n          .enter();\n\n        links.append('path')\n            .attr('class', 'link')\n            .attr('d', (d) => path(d))\n            .style('stroke-width', (d) => {\n              return d.dy;\n            })\n            .style('stroke', 'gray')\n            .on('mouseover', (d) => {\n              // console.log(d3.event);\n              d3.select(d3.event.target).style('stroke', 'red');\n            })\n            .on('mouseout', (d) => {\n              d3.select(d3.event.target).style('stroke', 'gray');\n            });\n\n        // d3.selectAll('.link')\n        //   .data(data.links)\n        //   .attr('d', (d) => path(d));\n        d3.selectAll('.node')\n          .data(data.nodes)\n          // .transition()\n          .attr('transform', (d) => `translate(${ d.x }, ${ d.y })`);\n        d3.selectAll('rect')\n          .data(data.nodes)\n          .style('opacity', 0)\n          .attr('width', sankeyChartD3.nodeWidth())\n          .attr('height', (d) => d.dy)\n          .transition()\n          .style('opacity', 1);\n\n        // Create Diference\n        // newLinks.forEach((v, k) => {\n        //   let link = d3.select('#links')\n        //     .append('path')\n        //       .attr('class', 'link')\n        //       .attr('d', () => path(v))\n        //       .style('stroke-width', () => Math.max(1, v.dy))\n        //       .style('stroke', () => scaleColor(v.source.name.replace(' ', '')))\n        //       .sort((a, b) => (b.dy - a.dy));\n        //\n        //   link.append('title').text(() => `${ v.source.name } → ${ v.target.name } \\n ${ formatoNumero(v.value) }`);\n        // });\n      };\n      const maxParent = (nodo) => {\n        // console.log(nodo);\n        let parentNode = nodesGlo.filter((element) => (element.id === nodo.parent))[0];\n\n        if (nodo.parent !== false) {\n          if (typeof(parentNode) !== 'undefined' && parentNode.group === true) {\n            return maxParent(nodesGlo.filter((element) => (element.id === nodo.parent))[0]);\n          } else {\n            return nodo;\n          }\n        } else {\n          return nodo;\n        }\n      };\n      const deleteEmptyNodes = () => {\n        let del = 0,\n            nodesDelete = [],\n            status;\n\n        // moveId = 0;\n\n        nodesGlo.forEach((node, nodeI) => {\n          // console.log('nodo: ' + nodeI + ' ( id: ' + node.id + ')');\n          status = false;\n\n          // Consulto si el nodo se utiliza en algun link\n          linksGlo.forEach((link, linkI) => {\n            if (node.id === link.source) {\n              status = true;\n              link.source = link.source - del;\n            }\n            if (node.id === link.target) {\n              status = true;\n              link.target = link.target - del;\n            }\n          });\n\n          // // Modificar el ID restando la cantidad de elementos borrados\n          // node.id = node.id - del;\n\n          if (!status) {\n            // console.log('Borrar');\n            nodesDelete.push(nodeI);\n            del++;\n          }\n          // else {\n          //   // console.log('nodo: ' + nodeI + ' ( id: ' + node.id + ')<-');\n          // }\n        });\n\n        nodesDelete.reverse().forEach((node) => { nodesGlo.splice(node, 1); });\n\n        // moveId = del;\n        // nodes.forEach((node, nodeI) => {\n        //   console.log('nodo: ' + nodeI + ' ( id: ' + node.id + ')');\n        // });\n\n        // console.log(links);\n        return nodesGlo;\n      };\n\n      const declareGroupLinks = (desarrollo = false) => {\n        let links = [],\n            source, parentSource, stateSource,\n            target, parentTarget, stateTarget,\n            nodoExistente,\n            addSource,\n            addTarget,\n            addValue;\n\n        linksGlo.forEach((v, k) => {\n          //Se obtiene source y target del elemento\n          source = nodesGlo.filter((element) => (element.id === parseInt(v.source)))[0];\n          target = nodesGlo.filter((element) => (element.id === parseInt(v.target)))[0];\n          //Se guarda source-padre y target-padre\n          parentSource = maxParent(source);\n          parentTarget = maxParent(target);\n          //Se guarda source-state y target-state\n          stateSource = parentSource.group;\n          stateTarget = parentTarget.group;\n          //Se guarda source y link a crear\n          addSource = (stateSource) ? (parentSource) : (source);\n          addTarget = (stateTarget) ? (parentTarget) : (target);\n          addValue  = parseInt(v.value);\n          //Se consulta si el nodo existe\n          nodoExistente = links.filter((element) => (element.source === addSource.id && element.target === addTarget.id));\n\n          if  (nodoExistente.length !== 0) {\n            //Se suma valor a duplicado\n            nodoExistente[0].value += addValue;\n          } else {\n            //Se creo nuevo link\n            links.push({\n              'source': addSource.id,\n              'target': addTarget.id,\n              'value':  addValue\n            });\n          }\n        });\n        return links;\n      };\n\n      const preSankey = () => {\n        linksGlo = $.extend(true, [], linksOri);\n        nodesGlo = $.extend(true, [], nodesOri);\n        linksGlo = declareGroupLinks();\n        nodesGlo = deleteEmptyNodes();\n\n        dibujarSankey(width, height, { 'nodes': nodesGlo, 'links': linksGlo });\n      };\n\n      const init = () => {\n\n        const downloadFile = () => {\n          console.log('Se solicitan archivos'); // Borrar\n\n          const formatoSankey     = (elemento, data) => {\n            let processData = [];\n\n            switch (elemento) {\n              case 'nodos':\n                data.forEach((v, k) => {\n\n                  processData.push({\n                    'id'      : parseInt(v.id),\n                    'name'    : v.name,\n                    'parent'  : (v.parent === 'null')?(false):(parseInt(v.parent)),\n                    'category': v.category,\n                    'pos'     : parseInt(v.position),\n                    'group'   : false,\n                    'imp'     : v.importation.split(';').map((element) => (parseInt(element))),\n                    'exp'     : v.exportation.split(';').map((element) => (parseInt(element))),\n                    'prod'    : v.production.split(';').map((element) => (parseInt(element)))\n                  });\n                });\n                break;\n              case 'links':\n                data.forEach((v, k) => {\n                  processData.push({\n                    'source': parseInt(v.source),\n                    'target': parseInt(v.target),\n                    'value' : parseInt(v.value),\n                  });\n                });\n                break;\n            }\n\n            return processData;\n          };\n\n          let promise = new Promise((success) => {\n            d3.csv('public/src/nodes.csv',\n              (nodos) => {\n                nodesOri = formatoSankey('nodos', nodos);\n\n                d3.csv('public/src/links.csv',\n                  (links) => {\n                    linksOri = formatoSankey('links', links);\n\n                    success();\n                  }\n                );\n              }\n            );\n          });\n\n          return promise;\n        };\n\n        downloadFile().then(() => {\n          preSankey();\n        });\n      };\n\n  init();\n});\n"]}